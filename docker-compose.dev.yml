version: "3.9"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ymb
      POSTGRES_PASSWORD: ymb
      POSTGRES_DB: ymb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ymb"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Application settings
      VERSION: ${APP_VERSION:-0.1.0}
      LOG_LEVEL: DEBUG
      API_HOST: 0.0.0.0
      API_PORT: 8000

      # Future database settings (not used in M1.2)
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ymb
      POSTGRES_PASSWORD: ymb
      POSTGRES_DB: ymb
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./backend/app:/app/app
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:8000
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend

networks:
  default:
    driver: bridge
